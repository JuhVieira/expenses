{"ast":null,"code":"import _objectSpread from \"/home/alys/Documentos/workspace/teste-mobills/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/alys/Documentos/workspace/teste-mobills/src/containers/expenses/ListExpenses.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Container, Typography } from '@material-ui/core';\nimport TableList from '../../components/table/Table';\nimport Modal from '../../components/modalExpense/Modal';\nimport { getCollection, deleteExpense, saveExpense, addExpense } from '../../providers/firebaseProvider';\nimport { updateExpenses } from '../../redux/actions/expensesActions';\n\nclass ListExpenses extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (value, key) => {\n      console.log(value);\n      this.setState(({\n        item_selected\n      }) => ({\n        item_selected: _objectSpread({}, item_selected, {\n          [key]: value\n        })\n      }));\n    };\n\n    this.state = {\n      expenses: [],\n      is_open: false,\n      item_selected: {}\n    };\n    this.save = this.save.bind(this);\n  }\n\n  async componentDidMount() {\n    const updateExpenses = this.props.updateExpenses;\n    await getCollection('expenses', async ({\n      docs\n    }) => {\n      updateExpenses(docs);\n    });\n  }\n\n  handleModalChange(item) {\n    this.setState(_objectSpread({}, this.state, {\n      is_open: !this.state.is_open,\n      item_selected: item ? _objectSpread({}, item, {\n        date: item.date.toDate()\n      }) : {}\n    }));\n  }\n\n  async deleteItem(id) {\n    await deleteExpense(id);\n  }\n\n  async save(e) {\n    e.preventDefault();\n    const item_selected = this.state.item_selected;\n    await saveExpense(item_selected);\n    this.handleModalChange();\n  }\n\n  render() {\n    const _this$state = this.state,\n          is_open = _this$state.is_open,\n          item_selected = _this$state.item_selected;\n    const expenses = this.props.expenses;\n    return React.createElement(Container, {\n      style: {\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\" // alignItems=\"top\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TableList, {\n      items: expenses,\n      openModal: item => this.handleModalChange(item),\n      deleteItem: id => this.deleteItem(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      is_open: is_open,\n      close: () => this.handleModalChange(),\n      item: item_selected,\n      handleChange: this.handleChange,\n      save: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    expenses: state.expenses.values\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateExpenses: docs => dispatch(updateExpenses(docs))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListExpenses);","map":{"version":3,"sources":["/home/alys/Documentos/workspace/teste-mobills/src/containers/expenses/ListExpenses.js"],"names":["React","Component","connect","Grid","CssBaseline","Container","Typography","TableList","Modal","getCollection","deleteExpense","saveExpense","addExpense","updateExpenses","ListExpenses","constructor","props","handleChange","value","key","console","log","setState","item_selected","state","expenses","is_open","save","bind","componentDidMount","docs","handleModalChange","item","date","toDate","deleteItem","id","e","preventDefault","render","height","mapStateToProps","values","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Container, Typography } from '@material-ui/core';\n\nimport TableList from '../../components/table/Table';\nimport Modal from '../../components/modalExpense/Modal'\n\nimport { getCollection, deleteExpense, saveExpense, addExpense } from '../../providers/firebaseProvider';\nimport { updateExpenses } from '../../redux/actions/expensesActions';\n\n\nclass ListExpenses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expenses: [],\n            is_open: false,\n            item_selected: {}\n        }\n        this.save = this.save.bind(this)\n    }\n\n    async componentDidMount() {\n        const { updateExpenses } = this.props\n        await getCollection('expenses', async ({ docs }) => {\n            updateExpenses(docs)\n        })\n    }\n\n    handleModalChange(item) {\n        this.setState({\n            ...this.state,\n            is_open: !this.state.is_open,\n            item_selected: item ? { ...item, date: item.date.toDate() } : {}\n        })\n    }\n\n    handleChange = (value, key) => {\n        console.log(value)\n        this.setState(({ item_selected }) => ({\n            item_selected: {\n                ...item_selected, ...{ [key]: value }\n            }\n        }))\n    }\n\n    async deleteItem(id) {\n        await deleteExpense(id)\n    }\n\n    async save(e) {\n        e.preventDefault();\n        const { item_selected } = this.state\n        await saveExpense(item_selected)\n        this.handleModalChange()\n    }\n\n    render() {\n        const { is_open, item_selected } = this.state\n        const { expenses } = this.props\n        return (\n            <Container style={{ height: '100vh' }}>\n                <CssBaseline />\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    // alignItems=\"top\"\n                >\n                    <TableList items={expenses}\n                        openModal={(item) => this.handleModalChange(item)}\n                        deleteItem={(id) => this.deleteItem(id)}\n                    />\n                    <Modal is_open={is_open}\n                        close={() => this.handleModalChange()}\n                        item={item_selected}\n                        handleChange={this.handleChange}\n                        save={this.save}\n                    />\n                </Grid>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        expenses: state.expenses.values,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateExpenses: docs => dispatch(updateExpenses(docs))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListExpenses)"]},"metadata":{},"sourceType":"module"}