{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport rootReducer from '../reducers/rootReducer';\nimport firebaseConfig from '../../config/firebaseConfig';\nexport const configureStore = preloadedState => {\n  const middlewares = [thunk.withExtraArgument({\n    getFirebase,\n    getFirestore\n  })];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const storeEnhancers = [middlewareEnhancer, reduxFirestore(firebaseConfig), reduxFirebase(firebaseConfig, {\n    useFirestoreForProfile: true,\n    userProfile: 'users',\n    attachAuthIsReady: true\n  })];\n  const composedEnhancer = composeWithDevTools(...storeEnhancers);\n  const store = createStore(rootReducer, preloadedState, composedEnhancer);\n  return store;\n};","map":{"version":3,"sources":["/home/alys/Documentos/workspace/teste-mobills/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","reduxFirebase","getFirebase","reduxFirestore","getFirestore","rootReducer","firebaseConfig","configureStore","preloadedState","middlewares","withExtraArgument","middlewareEnhancer","storeEnhancers","useFirestoreForProfile","userProfile","attachAuthIsReady","composedEnhancer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,sBAA3C;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,OAAO,MAAMC,cAAc,GAAGC,cAAc,IAAI;AAC9C,QAAMC,WAAW,GAAG,CAACV,KAAK,CAACW,iBAAN,CAAwB;AAACR,IAAAA,WAAD;AAAcE,IAAAA;AAAd,GAAxB,CAAD,CAApB;AAEA,QAAMO,kBAAkB,GAAGb,eAAe,CAAC,GAAGW,WAAJ,CAA1C;AAEA,QAAMG,cAAc,GAAG,CACrBD,kBADqB,EAErBR,cAAc,CAACG,cAAD,CAFO,EAGrBL,aAAa,CACXK,cADW,EAEX;AAACO,IAAAA,sBAAsB,EAAE,IAAzB;AAA+BC,IAAAA,WAAW,EAAE,OAA5C;AAAqDC,IAAAA,iBAAiB,EAAE;AAAxE,GAFW,CAHQ,CAAvB;AASA,QAAMC,gBAAgB,GAAGhB,mBAAmB,CAAC,GAAGY,cAAJ,CAA5C;AAEA,QAAMK,KAAK,GAAGpB,WAAW,CACvBQ,WADuB,EAEvBG,cAFuB,EAGvBQ,gBAHuB,CAAzB;AAMA,SAAOC,KAAP;AACD,CAvBM","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { reduxFirebase ,getFirebase } from 'react-redux-firebase'\nimport { reduxFirestore ,getFirestore } from 'redux-firestore'\nimport rootReducer from '../reducers/rootReducer'\nimport firebaseConfig from '../../config/firebaseConfig'\n\nexport const configureStore = preloadedState => {\n  const middlewares = [thunk.withExtraArgument({getFirebase, getFirestore})]\n\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const storeEnhancers = [\n    middlewareEnhancer,\n    reduxFirestore(firebaseConfig),\n    reduxFirebase(\n      firebaseConfig,\n      {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}\n    )\n  ]\n\n  const composedEnhancer = composeWithDevTools(...storeEnhancers)\n\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    composedEnhancer\n  )\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}