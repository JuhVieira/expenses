{"version":3,"sources":["serviceWorker.js","redux/actions/rootActions.js","firebase/config.js","providers/firebaseProvider.js","components/loading/Loading.js","components/table/Table.js","utils.js","components/modalExpense/Modal.js","containers/expenses/ListExpenses.js","redux/actions/expensesActions.js","components/modalRecipe/Modal.js","containers/recipe/ListRecipe.js","routes.js","redux/actions/revenueActions.js","containers/dashboard/Dashboard.js","components/notifications/Notification.js","messages.js","containers/signin/SignIn.js","containers/signup/SignUp.js","App.js","redux/reducers/expenseReducer.js","redux/reducers/revenueReducer.js","redux/reducers/defaultReducer.js","redux/reducers/rootReducer.js","index.js","redux/store.js"],"names":["Boolean","window","location","hostname","match","isLoading","value","type","isLoadingModal","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","auth","GoogleAuthProvider","firestore","getCollection","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","collection","callback","user","collectionRef","_args","arguments","wrap","_context","prev","next","length","undefined","sent","abrupt","where","onSnapshot","stop","_x","_x2","apply","this","saveItem","_ref2","_callee2","body","_context2","store","dispatch","id","doc","update","add","objectSpread","_x3","_x4","_x5","deleteItem","_ref3","_callee3","_context3","delete","_x6","_x7","signIn","_ref4","_callee4","credentials","_context4","signInWithEmailAndPassword","email","password","_x8","signUp","_ref5","_callee5","name","resp","_context5","createUserWithEmailAndPassword","uid","set","_x9","logOut","_ref6","_callee6","_context6","signOut","Loading","react_default","createElement","Fragment","className","CircularProgress","TableList","columns","items","title","loading","openModal","components_loading_Loading","Paper","style","width","marginTop","overflowX","display","justifyContent","margin","Typography","variant","Fab","size","color","aria-label","onClick","Add_default","marginRight","Table","TableHead","TableRow","map","column","i","TableCell","align","key","TableBody","item","component","scope","description","moment","date","toDate","format","toLocaleString","currency","paid","received","Check_default","fontWeight","IconButton","Create_default","Delete_default","ModalEdit","is_open","close","handleChange","save","Modal","open","onClose","LinearProgress","onSubmit","e","TextField","label","fullWidth","onChange","target","required","Number","InputProps","startAdornment","InputAdornment","position","FormControlLabel","control","Checkbox","checked","material_ui_pickers_esm","utils","DateFnsUtils","KeyboardButtonProps","Button","marginLeft","ListExpenses","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","item_selected","defineProperty","state","expenses","bind","assertThisInitialized","updateExpenses","_ref2$docs","docs","Date","preventDefault","handleModalChange","_this2","_this$state","_this$props2","is_loading","is_loading_modal","Container","CssBaseline","Grid","container","direction","justify","table_Table","components_modalExpense_Modal","Component","connect","values","root","ListRevenue","updateRevenue","revenue","components_modalRecipe_Modal","routes","path","exact","Dashboard","_this$props","profile","AppBar","Toolbar","flexGrow","react_router_dom","to","pathname","ExitToApp_default","react","react_router","route","render","Notification","message","timeout","NotificationManager","info","success","warning","error","errorLoginMessage","codeError","SignInScreen","showPassword","t0","code","alignItems","getSignIn","FormControl","InputLabel","htmlFor","Input","autoComplete","endAdornment","Visibility_default","VisibilityOff_default","getSignUp","App","SignIn","SignUp","initialState","rootReducer","combineReducers","action","data","firebaseReducer","__webpack_require__","d","__webpack_exports__","src_store","preloadedState","middlewares","thunk","withExtraArgument","getFirebase","getFirestore","storeEnhancers","applyMiddleware","reduxFirestore","firebaseConfig","reduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","composedEnhancer","composeWithDevTools","createStore","configureStore","firebaseAuthIsReady","then","ReactDOM","es","src_App_0","lib","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c07c5e4f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const isLoading = (value) => {\n    return{\n    type: 'IS_LOADING',\n    value: value\n  }}\n\n  export const isLoadingModal = (value) => {\n    return{\n    type: 'IS_LOADING_MODAL',\n    value: value\n  }}","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config = {\n    apiKey: \"AIzaSyAHUYq0tNv8ZYIKJoeWX77ueKAZr4ptDfM\",\n    authDomain: \"expenses-b1314.firebaseapp.com\",\n    databaseURL: \"https://expenses-b1314.firebaseio.com\",\n    projectId: \"expenses-b1314\",\n    storageBucket: \"\",\n    messagingSenderId: \"1033619373903\",\n    appId: \"1:1033619373903:web:04e35c08b5612ac6\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase","import firebase from '../firebase/config'\nimport { isLoadingModal } from '../redux/actions/rootActions';\nimport { store } from '../index';\n\nexport const authRef = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const db = firebase.firestore();\n\n\nexport const getCollection = async (collection, callback, user = {}) => {\n    const collectionRef = await db.collection(collection);\n    return collectionRef.where(\"user\", \"==\", user).onSnapshot(callback);\n}\n\nexport const saveItem = async (collection, body, user) => {\n    store.dispatch(isLoadingModal(true))\n    const collectionRef = db.collection(collection);\n    if (body.id) {\n        await collectionRef.doc(body.id).update(body);\n        store.dispatch(isLoadingModal(false))\n    } else {\n        await collectionRef.add({ ...body, user: user })\n        store.dispatch(isLoadingModal(false))\n    }\n}\n\nexport const deleteItem = async (collection, id) => {\n    const collectionRef = db.collection(collection);\n    return await collectionRef.doc(id).delete()\n}\n\n\nexport const signIn = async (credentials) => {\n    return await firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n    )\n}\n\nexport const signUp = async (user) => {\n    const { name, email, password } = user\n    const resp = await firebase.auth().createUserWithEmailAndPassword(email, password)\n    return await firebase.firestore().collection('users').doc(resp.user.uid).set({\n        name,\n        email,\n    })\n}\n\nexport const logOut = async () => {\n    return await firebase.auth().signOut()\n}","import React from 'react';\n\nimport { CircularProgress } from '@material-ui/core'\n\nimport './Loading.scss'\n\nconst Loading = () => (\n    <>\n        <div className=\"loading\">\n            <CircularProgress />\n        </div>\n\n    </>\n)\n\nexport default Loading","import React from 'react';\n\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Fab,\n    Paper,\n    Typography,\n} from '@material-ui/core'\n\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport CreateIcon from '@material-ui/icons/Create';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { formatMoney } from '../../utils';\nimport Loading from '../loading/Loading';\nimport moment from 'moment';\n\nconst TableList = ({ columns, items, title, loading, openModal, deleteItem }) => (\n    <>\n        {loading ?\n            <Loading />\n            :\n            <Paper style={{\n                width: '100%',\n                marginTop: 15,\n                overflowX: 'auto'\n            }}>\n\n                <div style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    margin: 15,\n                }}>\n                    <Typography variant=\"h6\" id=\"tableTitle\" style={{ margin: 10 }}>\n                        {title}\n                    </Typography>\n                    <Fab\n                        variant=\"extended\"\n                        size=\"medium\"\n                        color=\"primary\"\n                        aria-label=\"Add\"\n                        style={{ margin: 10 }}\n                        onClick={() => openModal()}>\n                        <AddIcon style={{ marginRight: 5 }} />\n                        Adicionar\n                    </Fab>\n                </div>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column, i) => (\n                                <TableCell align={i === 0 ? \"left\" : \"center\"} key={i}>\n                                    {column}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {items.map((item, i) => (\n                            <TableRow key={i}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {item.description}\n                                </TableCell>\n                                <TableCell align=\"center\">{moment(item.date.toDate()).format('DD/MM/YYYY')}</TableCell>\n                                <TableCell align=\"center\">{formatMoney(item.value)}</TableCell>\n                                <TableCell align=\"center\">\n                                    {item.paid || item.received ?\n                                        <CheckIcon style={{ color: \"green\", fontWeight: 600 }} /> :\n                                        null\n                                    }\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton onClick={() => openModal(item)} size=\"small\" aria-label=\"Edit\">\n                                        <CreateIcon />\n                                    </IconButton>\n                                    <IconButton onClick={() => deleteItem(item.id)} size=\"small\" color=\"secondary\" aria-label=\"Delete\" style={{ margin: 10 }}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n        }\n    </>\n)\n\nexport default TableList","export function formatMoney(number) {\n    return number.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});\n}","import React from 'react';\n\nimport {\n    Modal,\n    Typography,\n    InputAdornment,\n    FormControlLabel,\n    Checkbox,\n    Button,\n    Paper,\n    TextField,\n    LinearProgress\n} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport moment from 'moment';\nimport './Modal.scss';\n\nconst ModalEdit = ({ is_open, close, item, loading, handleChange, save }) => (\n    <Modal\n        open={is_open}\n        onClose={() => close()}\n        className=\"modal\"\n    >\n        <>\n            <Paper className=\"paper\">\n                {loading ?\n                    <LinearProgress variant=\"query\" />\n                    : null}\n                <Typography variant=\"h6\" id=\"title\" className=\"header\">\n                    {item.id ? 'Editar Despesa' : 'Adicionar Despesa'}\n                </Typography>\n                <form className=\"form\" onSubmit={(e) => save(e)}>\n                    <TextField\n                        label=\"Descrição\"\n                        id=\"description\"\n                        fullWidth\n                        onChange={({ target }) => handleChange(target.value, 'description')}\n                        value={item.description}\n                        required\n                    />\n                    <TextField\n                        id=\"simple-start-adornment\"\n                        label=\"Valor\"\n                        value={item.value}\n                        onChange={({ target }) => handleChange(Number(target.value), 'value')}\n                        type=\"number\"\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                        }}\n                        margin=\"normal\"\n                        style={{ marginTop: 25 }}\n                        required\n                    />\n                    <div style={{ display: \"flex\", justifyContent: 'space-around' }}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={item.paid}\n                                    onChange={() => handleChange(!item.paid, 'paid')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Pago\"\n                            style={{ marginTop: 25 }}\n                        />\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                id=\"mui-pickers-date\"\n                                label=\"Data\"\n                                value={moment(item.date)}\n                                onChange={(value) => handleChange(value, 'date')}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                                format=\"dd/MM/yyyy\"\n                                style={{ marginTop: 25 }}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </div>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{ marginLeft: \"auto\", marginTop: 25 }}>\n                        Salvar\n                    </Button>\n                </form>\n            </Paper>\n        </>\n    </Modal>\n)\n\nexport default ModalEdit","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport { Container, CssBaseline, Grid } from '@material-ui/core';\n\nimport TableList from '../../components/table/Table';\nimport Modal from '../../components/modalExpense/Modal'\n\nimport { getCollection, deleteItem, saveItem } from '../../providers/firebaseProvider';\nimport { updateExpenses } from '../../redux/actions/expensesActions';\nimport { isLoading } from '../../redux/actions/rootActions';\n\nclass ListExpenses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expenses: [],\n            is_open: false,\n            item_selected: {}\n        }\n        this.save = this.save.bind(this)\n    }\n\n    async componentDidMount() {\n        const { auth, updateExpenses, isLoading } = this.props\n        isLoading(true)\n        await getCollection('expenses', async ({ docs = [] }) => {\n            updateExpenses(docs)\n            isLoading(false)\n        }, auth.uid)\n    }\n\n    handleModalChange(item) {\n        this.setState((state) => ({\n            ...state,\n            is_open: !state.is_open,\n            item_selected: item ?\n                { ...item, date: item.date.toDate() } :\n                { date: new Date(), description: '', value: '', paid: false }\n        }))\n    }\n\n    handleChange = (value, key) => {\n        this.setState(({ item_selected }) => ({\n            item_selected: {\n                ...item_selected, ...{ [key]: value }\n            }\n        }))\n    }\n\n    async deleteItem(id) {\n        await deleteItem('expenses', id)\n    }\n\n    async save(e) {\n        e.preventDefault();\n        const { item_selected } = this.state\n        const { auth } = this.props\n        await saveItem('expenses', item_selected, auth.uid)\n        this.handleModalChange()\n    }\n\n    render() {\n        const { is_open, item_selected } = this.state\n        const { expenses, columns, is_loading, is_loading_modal } = this.props\n        return (\n            <Container>\n                <CssBaseline />\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                >\n                    <TableList\n                        columns={columns}\n                        items={expenses}\n                        title=\"Lista de Despesas\"\n                        loading={is_loading}\n                        openModal={(item) => this.handleModalChange(item)}\n                        deleteItem={(id) => this.deleteItem(id)}\n                    />\n                    <Modal is_open={is_open}\n                        close={() => this.handleModalChange()}\n                        item={item_selected}\n                        loading={is_loading_modal}\n                        handleChange={this.handleChange}\n                        save={this.save}\n                    />\n                </Grid>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    auth: state.firebase.auth,\n    expenses: state.expenses.values,\n    columns: state.expenses.columns,\n    is_loading: state.root.is_loading,\n    is_loading_modal: state.root.is_loading_modal,\n})\n\n\nexport default connect(mapStateToProps, { updateExpenses, isLoading })(ListExpenses)","export const updateExpenses = value => ({\n    type: 'UPDATE_EXPENSES',\n    value: value\n  });","import React from 'react';\n\nimport {\n    Modal,\n    Typography,\n    InputAdornment,\n    FormControlLabel,\n    Checkbox,\n    Button,\n    Paper,\n    TextField,\n    LinearProgress\n} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport moment from 'moment';\nimport './Modal.scss';\n\nconst ModalEdit = ({ is_open, close, item, loading, handleChange, save }) => (\n    <Modal\n        open={is_open}\n        onClose={() => close()}\n        className=\"modal\"\n    >\n        <Paper className=\"paper\">\n            {loading ?\n                <LinearProgress variant=\"query\" />\n                : null}\n            <Typography variant=\"h6\" id=\"tableTitle\" className=\"header\">\n                {item.id ? 'Editar Receita' : 'Adicionar Receita'}\n            </Typography>\n            <form className=\"form\" onSubmit={(e) => save(e)}>\n                <TextField\n                    label=\"Descrição\"\n                    id=\"description\"\n                    fullWidth\n                    onChange={({ target }) => handleChange(target.value, 'description')}\n                    value={item.description}\n                    required\n                />\n                <TextField\n                    id=\"value\"\n                    label=\"Valor\"\n                    value={item.value}\n                    onChange={({ target }) => handleChange(Number(target.value), 'value')}\n                    type=\"number\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                    }}\n                    margin=\"normal\"\n                    style={{ marginTop: 25 }}\n                    required\n                />\n                <div style={{ display: \"flex\", justifyContent: 'space-around' }}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={item.received}\n                                onChange={() => handleChange(!item.received, 'received')}\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Recebido\"\n                        style={{ marginTop: 25 }}\n                    />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"date\"\n                            label=\"Data\"\n                            value={moment(item.date)}\n                            onChange={(value) => handleChange(value, 'date')}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                            format=\"dd/MM/yyyy\"\n                            style={{ marginTop: 25 }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </div>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{ marginLeft: \"auto\", marginTop: 25 }}>\n                    Salvar\n                </Button>\n            </form>\n        </Paper>\n    </Modal>\n)\n\nexport default ModalEdit","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport { Container, CssBaseline, Grid } from '@material-ui/core';\n\nimport TableList from '../../components/table/Table';\nimport Modal from '../../components/modalRecipe/Modal'\n\nimport { getCollection, deleteItem, saveItem } from '../../providers/firebaseProvider';\nimport { updateRevenue } from '../../redux/actions/revenueActions';\nimport { isLoading } from '../../redux/actions/rootActions';\n\n\nclass ListRevenue extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            item_selected: {}\n        }\n        this.save = this.save.bind(this)\n    }\n\n    async componentDidMount() {\n        const { updateRevenue, isLoading, auth } = this.props\n        isLoading(true)\n        await getCollection('revenue', async ({ docs }) => {\n            updateRevenue(docs)\n            isLoading(false)\n        }, auth.uid)\n    }\n\n    handleModalChange(item) {\n        this.setState({\n            ...this.state,\n            is_open: !this.state.is_open,\n            item_selected: item ?\n                { ...item, date: item.date.toDate() } :\n                { date: new Date(), description: '', value: '', received: false }\n        })\n    }\n\n    handleChange = (value, key) => {\n        this.setState(({ item_selected }) => ({\n            item_selected: {\n                ...item_selected, ...{ [key]: value }\n            }\n        }))\n    }\n\n    async deleteItem(id) {\n        await deleteItem('revenue', id)\n    }\n\n    async save(e) {\n        e.preventDefault();\n        const { item_selected } = this.state\n        const { auth } = this.props\n        await saveItem('revenue', item_selected, auth.uid)\n        this.handleModalChange()\n    }\n\n    render() {\n        const { is_open, item_selected } = this.state\n        const { revenue, columns, is_loading, is_loading_modal } = this.props\n        return (\n            <Container>\n                <CssBaseline />\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                >\n                    <TableList\n                        columns={columns}\n                        items={revenue}\n                        loading={is_loading}\n                        title=\"Lista de Receitas\"\n                        openModal={(item) => this.handleModalChange(item)}\n                        deleteItem={(id) => this.deleteItem(id)}\n                    />\n                    <Modal is_open={is_open}\n                        close={() => this.handleModalChange()}\n                        item={item_selected}\n                        loading={is_loading_modal}\n                        handleChange={this.handleChange}\n                        save={this.save}\n                    />\n                </Grid>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    auth: state.firebase.auth,\n    revenue: state.revenue.values,\n    columns: state.revenue.columns,\n    is_loading: state.root.is_loading,\n    is_loading_modal: state.root.is_loading_modal\n})\n\n\nexport default connect(mapStateToProps, { updateRevenue, isLoading })(ListRevenue)","\nimport ListExpenses from './containers/expenses/ListExpenses';\nimport ListRevenue from './containers/recipe/ListRecipe';\n\n\nconst routes = [\n  { path: '/despesas', exact: true, name: 'ListExpenses', component: ListExpenses },\n  { path: '/receitas', name:'ListRevenue', component: ListRevenue },\n]\n\nexport default routes;\n","export const updateRevenue = value => ({\n    type: 'UPDATE_REVENUE',\n    value: value\n  });","import React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux'\nimport { Redirect, Route, Switch, Link } from 'react-router-dom';\n\nimport { Container, Typography, Toolbar, AppBar, IconButton } from '@material-ui/core';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\n\n\nimport { isLoading } from '../../redux/actions/rootActions';\nimport { logOut } from '../../providers/firebaseProvider';\nimport routes from '../../routes';\n\nimport './Dashboard.scss'\n\nclass Dashboard extends Component {\n    render() {\n        const { location, auth, profile } = this.props\n        if (!auth.uid) return <Redirect to=\"/login\" />\n        return (\n            <>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n                            Bem-Vindo {profile.name}\n                        </Typography>\n                        <Link to=\"/despesas\" className={location.pathname === '/despesas' ? \"link-toolbar active\" : 'link-toolbar'}>\n                            Despesas\n                        </Link>\n                        <Link to=\"/receitas\" className={location.pathname === '/receitas' ? \"link-toolbar active\" : 'link-toolbar'}>\n                            Receitas\n                        </Link>\n                        <IconButton color=\"inherit\" size=\"small\"\n                            className=\"icon-toolbar\"\n                            onClick={() => logOut()} aria-label=\"Logout\">\n                            <LogoutIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <main>\n                    <Container>\n                        <Suspense>\n                            <Switch>\n                                {routes.map((route, id) => (\n                                    <Route\n                                        key={id}\n                                        path={route.path}\n                                        exact={route.exact}\n                                        name={route.name}\n                                        render={props => (\n                                            <route.component {...props} />\n                                        )} />\n                                ))}\n                                <Redirect to=\"/despesas\" />\n                            </Switch>\n                        </Suspense>\n                    </Container>\n                </main>\n            </>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        is_loading: state.root.is_loading,\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    isLoading: (value) => dispatch(isLoading(value)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n","import { NotificationManager } from 'react-notifications';\n\n\nconst Notification = (\n  type = 'info',\n  title,\n  message,\n  timeout = 4000,\n  callback = () => { }\n) => {\n  switch (type) {\n    case 'info':\n      NotificationManager.info(message, title);\n      break;\n    case 'success':\n      NotificationManager.success(message, title);\n      break;\n    case 'warning':\n      NotificationManager.warning(message, title, timeout);\n      break;\n    case 'error':\n      NotificationManager.error(message, title, timeout, callback);\n      break;\n    default:\n      NotificationManager.info(message, title);\n      break\n  }\n};\n\nexport default Notification;","export const errorLoginMessage = (codeError) => {\n    switch (codeError) {\n        case 'auth/invalid-email':\n            return { title: 'Email inválido', message: 'Por favor digite um email válido.' }\n        case 'auth/wrong-password':\n            return { title: 'Senha errada', message: 'Por favor verifique sua senha e tente novamente.' }\n        case 'auth/user-not-found':\n            return { title: 'Usuário não encontrado', message: 'Por favor verifique seu email e tente novamente.' }\n        case 'auth/weak-password':\n            return { title: 'Senha inválida', message: 'Sua senha precisa ter no mínimo 6 caracteres' }\n        case 'auth/email-already-in-use':\n            return { title: 'Email inválido', message: 'O endereço de e-mail já está sendo usado por outra conta.' }\n        default:\n            return { title: 'Erro', message: 'Algo de errado aconteceu, tente novamente.' }\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom';\n\nimport {\n    Container,\n    CssBaseline,\n    Grid,\n    Paper,\n    Typography,\n    Button,\n    FormControl,\n    InputLabel,\n    Input,\n    InputAdornment,\n} from '@material-ui/core';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Notification from '../../components/notifications/Notification';\n\nimport { isLoading } from '../../redux/actions/rootActions';\nimport { signIn } from '../../providers/firebaseProvider'\nimport { errorLoginMessage } from '../../messages';\n\nimport './SignIn.scss'\n\n\nclass SignInScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPassword: false,\n            user: {\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    handleChange(key, value) {\n        this.setState(({ user }) => ({\n            user: { ...user, ...{ [key]: value } }\n        }))\n    }\n\n    async getSignIn(e) {\n        e.preventDefault()\n        const { user } = this.state\n        try {\n            await signIn(user)\n        } catch (e) {\n            const { title, message } = errorLoginMessage(e.code)\n            Notification('error', title, message)\n        }\n    }\n\n    render() {\n        const { showPassword, user } = this.state\n        const { auth } = this.props\n        if (auth.uid) return <Redirect to=\"/\" />\n        return (\n            <Container >\n                <CssBaseline />\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className=\"signin\"\n                >\n                    <Paper\n                        className=\"paper\">\n                        <Typography variant=\"h5\" id=\"tableTitle\" className=\"header\">\n                            Login\n                        </Typography>\n                        <form className=\"form\" onSubmit={(e) => this.getSignIn(e)}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"email\">Email</InputLabel>\n                                <Input\n                                    id=\"email\"\n                                    value={user.email}\n                                    required\n                                    onChange={(e) => this.handleChange('email', e.target.value)}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                                <Input\n                                    id=\"password\"\n                                    type={showPassword ? 'text' : 'password'}\n                                    value={user.password}\n                                    autoComplete=\"password\"\n                                    required\n                                    onChange={(e) => this.handleChange('password', e.target.value)}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton aria-label=\"Toggle password visibility\" onClick={() => this.setState((state) => ({ ...state, showPassword: !showPassword }))}>\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n                            <Typography variant=\"subtitle2\" className=\"no-register\">\n                                    Não possui cadastro?\n                                <Link to=\"/cadastrar\">\n                                    Cadastre-se agora.\n                                </Link>\n                            </Typography>\n                            <div className=\"button\">\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{ marginLeft: \"auto\", marginTop: 25 }}>\n                                    Entrar\n                                </Button>\n                            </div>\n                        </form>\n                    </Paper>\n\n                </Grid>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    is_loading: state.root.is_loading,\n    auth: state.firebase.auth\n})\n\n\n\nexport default connect(mapStateToProps, { isLoading })(SignInScreen)","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Redirect, Link } from 'react-router-dom';\n\nimport {\n    Container,\n    CssBaseline,\n    Grid,\n    Paper,\n    Typography,\n    Button,\n    FormControl,\n    InputLabel,\n    Input,\n    InputAdornment,\n} from '@material-ui/core';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { isLoading } from '../../redux/actions/rootActions';\nimport { signUp } from '../../providers/firebaseProvider';\nimport { errorLoginMessage } from '../../messages';\nimport Notification from '../../components/notifications/Notification';\n\nimport './SignUp.scss';\n\nclass SignInScreen extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showPassword: false,\n            user: {\n                name: '',\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    handleChange(key, value) {\n        this.setState(({ user }) => ({\n            user: {\n                ...user, ...{ [key]: value }\n            }\n        }))\n    }\n\n    async getSignUp(e) {\n        e.preventDefault()\n        const { user } = this.state\n        try {\n            await signUp(user)\n        } catch (e) {\n            const { title, message } = errorLoginMessage(e.code)\n            Notification('error', title, message)\n        }\n    }\n\n    render() {\n        const { showPassword, user } = this.state\n        const { auth } = this.props\n        if (auth.uid) return <Redirect to=\"/\" />\n        return (\n            <Container >\n                <CssBaseline />\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className=\"signin\"\n                >\n                    <Paper\n                        className=\"paper\">\n                        <Typography variant=\"h5\" id=\"paperTitle\" className=\"header\">\n                            Cadastrar\n                        </Typography>\n                        <form className=\"form\" onSubmit={(e) => this.getSignUp(e)}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"name\">Nome</InputLabel>\n                                <Input\n                                    id=\"name\"\n                                    value={user.name}\n                                    required\n                                    onChange={(e) => this.handleChange('name', e.target.value)}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"email\">Email</InputLabel>\n                                <Input\n                                    id=\"email\"\n                                    value={user.email}\n                                    required\n                                    onChange={(e) => this.handleChange('email', e.target.value)}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"adornment-password\">Senha</InputLabel>\n                                <Input\n                                    id=\"adornment-password\"\n                                    type={showPassword ? 'text' : 'password'}\n                                    value={user.password}\n                                    autoComplete=\"password\"\n                                    required\n                                    onChange={(e) => this.handleChange('password', e.target.value)}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton aria-label=\"Toggle password visibility\" onClick={() => this.setState((state) => ({ ...state, showPassword: !showPassword }))}>\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n                            <Typography variant=\"subtitle1\" className=\"has-register\">\n                                Já possui cadastro? \n                                <Link to=\"/login\">\n                                    Faça Login\n                                </Link>\n                            </Typography>\n                            <div className=\"button\">\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{ marginLeft: \"auto\", marginTop: 25 }}>\n                                    Cadastrar\n                                </Button>\n                            </div>\n                        </form>\n                    </Paper>\n\n                </Grid>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    is_loading: state.root.is_loading,\n    auth: state.firebase.auth\n})\n\n\nexport default connect(mapStateToProps, { isLoading })(SignInScreen)","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport Dashboard from './containers/dashboard/Dashboard';\nimport SignIn from './containers/signin/SignIn';\nimport SignUp from './containers/signup/SignUp';\n\nimport './App.scss';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n          <Switch>\n            <Route path='/login' component={SignIn} />\n            <Route path='/cadastrar' component={SignUp} />\n            <Route path='/' component={Dashboard} />\n          </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App","const initialState = {\n    values: [],\n    columns: [\n      'Descrição',\n      'Data',\n      'Value',\n      'Pago',\n      ''\n    ],\n  };\n  export const expenseReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'UPDATE_EXPENSES':\n        return {\n          ...state,\n          values: action.value.map((doc) => ({ ...doc.data(), ...{ id: doc.id } }))\n        };\n      default:\n        return state;\n    }\n  };","const initialState = {\n    values: [],\n    columns: [\n        'Descrição',\n        'Data',\n        'Value',\n        'Recebido',\n        ''\n      ]\n  };\n  export const revenueReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'UPDATE_REVENUE':\n        return {\n          ...state,\n          values: action.value.map((doc) => ({ ...doc.data(), ...{ id: doc.id } }))\n        };\n      default:\n        return state;\n    }\n  };","const initialState = {\n    is_loading: false,\n    is_loading_modal: false\n};\nexport const defaultReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'IS_LOADING':\n            return {\n                ...state,\n                is_loading: action.value\n            };\n        case 'IS_LOADING_MODAL':\n            return {\n                ...state,\n                is_loading_modal: action.value\n            };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nimport { expenseReducer } from './expenseReducer';\nimport { revenueReducer } from './revenueReducer';\nimport { defaultReducer } from './defaultReducer';\n\nconst rootReducer = combineReducers({\n    root: defaultReducer,\n    expenses: expenseReducer,\n    revenue: revenueReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport { NotificationContainer } from 'react-notifications';\n\nimport App from './App';\nimport { configureStore } from './redux/store';\nimport 'react-notifications/lib/notifications.css';\nimport './index.css';\n\nexport const store = configureStore()\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n            <NotificationContainer />\n        </Provider>,\n        document.getElementById('root')\n    );\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { reduxFirebase ,getFirebase } from 'react-redux-firebase'\nimport { reduxFirestore ,getFirestore } from 'redux-firestore'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers/rootReducer'\nimport firebaseConfig from '../firebase/config'\n\nexport const configureStore = preloadedState => {\n  const middlewares = [thunk.withExtraArgument({getFirebase, getFirestore})]\n\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const storeEnhancers = [\n    middlewareEnhancer,\n    reduxFirestore(firebaseConfig),\n    reduxFirebase(\n      firebaseConfig,\n      {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}\n    )\n  ]\n\n  const composedEnhancer = composeWithDevTools(...storeEnhancers)\n\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    composedEnhancer\n  )\n\n  return store\n}\n"],"sourceRoot":""}