{"ast":null,"code":"import _objectSpread from \"/home/alys/Documentos/workspace/teste-mobills/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/alys/Documentos/workspace/teste-mobills/src/containers/expenses/ListExpenses.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Container, Typography } from '@material-ui/core';\nimport TableList from '../../components/table/Table';\nimport Modal from '../../components/modalExpense/Modal';\nimport { getCollection, deleteExpense } from '../../providers/firebaseProvider';\n\nclass ListExpenses extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState(_objectSpread({}, this.state.item_selected[e.target.id] = e.target.value));\n    };\n\n    this.state = {\n      expenses: [],\n      is_open: false,\n      item_selected: {}\n    };\n  }\n\n  async componentDidMount() {\n    await getCollection('expenses', async ({\n      docs\n    }) => {\n      const items = docs.map(doc => _objectSpread({}, doc.data()));\n      this.setState(_objectSpread({}, this.state, {\n        expenses: items\n      }));\n    });\n  }\n\n  handleModalChange(item) {\n    this.setState(_objectSpread({}, this.state, {\n      is_open: !this.state.is_open,\n      item_selected: item ? item : {}\n    }));\n  }\n\n  async deleteItem(id) {\n    await deleteExpense(id);\n  }\n\n  render() {\n    const _this$state = this.state,\n          expenses = _this$state.expenses,\n          is_open = _this$state.is_open,\n          item_selected = _this$state.item_selected;\n    return React.createElement(Container, {\n      style: {\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TableList, {\n      items: expenses,\n      openModal: item => this.handleModalChange(item),\n      deleteItem: id => this.deleteItem(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      is_open: is_open,\n      close: () => this.handleModalChange(),\n      item: item_selected,\n      handleChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    expenses: state.firestore.ordered.expenses\n  };\n};\n\nexport default connect(mapStateToProps)(ListExpenses);","map":{"version":3,"sources":["/home/alys/Documentos/workspace/teste-mobills/src/containers/expenses/ListExpenses.js"],"names":["React","Component","connect","Grid","CssBaseline","Container","Typography","TableList","Modal","getCollection","deleteExpense","ListExpenses","constructor","props","handleChange","e","setState","state","item_selected","target","id","value","expenses","is_open","componentDidMount","docs","items","map","doc","data","handleModalChange","item","deleteItem","render","height","mapStateToProps","firestore","ordered"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Container, Typography } from '@material-ui/core';\n\nimport TableList from '../../components/table/Table';\nimport Modal from '../../components/modalExpense/Modal'\n\nimport { getCollection, deleteExpense } from '../../providers/firebaseProvider';\n\n\nclass ListExpenses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expenses: [],\n            is_open: false,\n            item_selected: {}\n        }\n    }\n\n    async componentDidMount() {\n        await getCollection('expenses', async ({ docs }) => {\n            const items = docs.map((doc) => ({ ...doc.data() }))\n            this.setState({ ...this.state, expenses: items })\n        })\n    }\n\n    handleModalChange(item) {\n        this.setState({\n            ...this.state,\n            is_open: !this.state.is_open,\n            item_selected: item ? item : {}\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            ...this.state.item_selected[e.target.id] = e.target.value\n        })\n    }\n\n    async deleteItem(id) {\n        await deleteExpense(id)\n    }\n    render() {\n        const { expenses, is_open, item_selected } = this.state\n        return (\n            <Container style={{ height: '100vh' }}>\n                <CssBaseline />\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"top\"\n                >\n                    <TableList items={expenses}\n                        openModal={(item) => this.handleModalChange(item)}\n                        deleteItem={(id) => this.deleteItem(id)}\n                    />\n                    <Modal is_open={is_open}\n                        close={() => this.handleModalChange()}\n                        item={item_selected}\n                        handleChange={(e) => this.handleChange(e)}\n                    />\n                </Grid>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        expenses: state.firestore.ordered.expenses,\n    }\n}\n\n\nexport default connect(mapStateToProps)(ListExpenses)"]},"metadata":{},"sourceType":"module"}